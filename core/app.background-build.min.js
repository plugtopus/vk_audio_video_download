var App = App || {};
App.Background = function(global, chrome) {
    this.storage = global["localStorage"] || {};
    this.global = global;
    this.chrome = chrome;
    this.extension = chrome['extension'];
    this.page = chrome['extension'].getBackgroundPage();
    this.anchor = global['document'].createElement("a");
    this._start();
};

App.Background.prototype = {
    _key: {
        date: "vkvm__install_date",
        update: "vkvm__update_handled"
    },
    _start: function() {
        this._attachEvents();
    },
    _attachEvents: function() {
        this.chrome['runtime']['onMessage'].addListener(this._onMessageReceive.bind(this));
        this.chrome['runtime']['onInstalled'].addListener(this._onStatusChanged.bind(this));
    },
    _downloadFile: function(url, name) {
        chrome['downloads'].download({
                url: url,
                filename: name
            },
            function() {});
    },
    _onMessageReceive: function(request, sender, sendresponse) {
        var action = request.action;
        var data = request.data || {};

        if (action === "download")
            this._onDownloadRequest(data);
    },
    _onDownloadRequest: function(data) {
        if (!data.url || !data.filename)
            return;

        this._downloadFile(data.url, data.filename);
    },
    _onStatusChanged: function(details) {
        var reason = details && details.reason || null;
        if (reason === "install")
            this._onInstallDispatched();
        if (reason === "update")
            this._onUpdateDispatched();
    },
    _onInstallDispatched: function() {
        this.storage[this._key.date] = Date.now();
    },
    _onUpdateDispatched: function() {}
};;
new App.Background(window, chrome);